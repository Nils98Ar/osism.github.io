"use strict";(self.webpackChunkosism=self.webpackChunkosism||[]).push([[8224],{3905:(e,t,n)=>{n.d(t,{Zo:()=>h,kt:()=>u});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},h=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,h=s(e,["components","mdxType","originalType","parentName"]),c=d(n),m=o,u=c["".concat(l,".").concat(m)]||c[m]||p[m]||i;return n?r.createElement(u,a(a({ref:t},h),{},{components:n})):r.createElement(u,a({ref:t},h))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:o,a[1]=s;for(var d=2;d<i;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3910:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_label:"Developer Guide",sidebar_position:90},a="Developer Guide",s={unversionedId:"advanced-guides/developer-guide",id:"advanced-guides/developer-guide",title:"Developer Guide",description:"Release notes",source:"@site/docs/advanced-guides/developer-guide.md",sourceDirName:"advanced-guides",slug:"/advanced-guides/developer-guide",permalink:"/docs/advanced-guides/developer-guide",draft:!1,editUrl:"https://github.com/osism/osism.github.io/tree/main/docs/advanced-guides/developer-guide.md",tags:[],version:"current",sidebarPosition:90,frontMatter:{sidebar_label:"Developer Guide",sidebar_position:90},sidebar:"tutorialSidebar",previous:{title:"Contributor Guide",permalink:"/docs/advanced-guides/contributor-guide"},next:{title:"Style Guide",permalink:"/docs/advanced-guides/style-guide"}},l={},d=[{value:"Release notes",id:"release-notes",level:2},{value:"Installation",id:"installation",level:3},{value:"Usage",id:"usage",level:3},{value:"Example",id:"example",level:3},{value:"Repositories without release notes",id:"repositories-without-release-notes",level:3}],h={toc:d},c="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"developer-guide"},"Developer Guide"),(0,o.kt)("h2",{id:"release-notes"},"Release notes"),(0,o.kt)("p",null,"We use ",(0,o.kt)("a",{parentName:"p",href:"https://docs.openstack.org/reno/latest/"},"Reno")," to manage the release notes."),(0,o.kt)("h3",{id:"installation"},"Installation"),(0,o.kt)("p",null,"Reno is provided as a ",(0,o.kt)("a",{parentName:"p",href:"https://pypi.org/project/reno/"},"Python package")," and can be installed with pip."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"pip3 install reno\n")),(0,o.kt)("h3",{id:"usage"},"Usage"),(0,o.kt)("p",null,"For each change in a repository, a release note is created with Reno.\nSomething meaningful is used as the name for the note. For example, if the\nrequirements file for Ansible is removed, ",(0,o.kt)("inlineCode",{parentName:"p"},"remove-ansible-requirements")," is a good name."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ reno new remove-ansible-requirements\nno configuration file in: ./releasenotes/config.yaml, ./reno.yaml\nCreated new notes file in releasenotes/notes/remove-ansible-requirements-6c6eba43f616bc6b.yaml\n")),(0,o.kt)("p",null,"The created file contains prepared entries for several categories. It is described briefly\nin each instance which contents belong in which category. What is not needed is deleted."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"prelude: >\n    Replace this text with content to appear at the top of the section for this\n    release. All of the prelude content is merged together and then rendered\n    separately from the items listed in other parts of the file, so the text\n    needs to be worded so that both the prelude and the other items make sense\n    when read independently. This may mean repeating some details. Not every\n    release note requires a prelude. Usually only notes describing major\n    features or adding release theme details should have a prelude.\nfeatures:\n  - |\n    List new features here, or remove this section.  All of the list items in\n    this section are combined when the release notes are rendered, so the text\n    needs to be worded so that it does not depend on any information only\n    available in another section, such as the prelude. This may mean repeating\n    some details.\nissues:\n  - |\n    List known issues here, or remove this section.  All of the list items in\n    this section are combined when the release notes are rendered, so the text\n    needs to be worded so that it does not depend on any information only\n    available in another section, such as the prelude. This may mean repeating\n    some details.\nupgrade:\n  - |\n    List upgrade notes here, or remove this section.  All of the list items in\n    this section are combined when the release notes are rendered, so the text\n    needs to be worded so that it does not depend on any information only\n    available in another section, such as the prelude. This may mean repeating\n    some details.\ndeprecations:\n  - |\n    List deprecations notes here, or remove this section.  All of the list\n    items in this section are combined when the release notes are rendered, so\n    the text needs to be worded so that it does not depend on any information\n    only available in another section, such as the prelude. This may mean\n    repeating some details.\ncritical:\n  - |\n    Add critical notes here, or remove this section.  All of the list items in\n    this section are combined when the release notes are rendered, so the text\n    needs to be worded so that it does not depend on any information only\n    available in another section, such as the prelude. This may mean repeating\n    some details.\nsecurity:\n  - |\n    Add security notes here, or remove this section.  All of the list items in\n    this section are combined when the release notes are rendered, so the text\n    needs to be worded so that it does not depend on any information only\n    available in another section, such as the prelude. This may mean repeating\n    some details.\nfixes:\n  - |\n    Add normal bug fixes here, or remove this section.  All of the list items\n    in this section are combined when the release notes are rendered, so the\n    text needs to be worded so that it does not depend on any information only\n    available in another section, such as the prelude. This may mean repeating\n    some details.\nother:\n  - |\n    Add other notes here, or remove this section.  All of the list items in\n    this section are combined when the release notes are rendered, so the text\n    needs to be worded so that it does not depend on any information only\n    available in another section, such as the prelude. This may mean repeating\n    some details.\n")),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("p",null,"Here is an example of a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/osism/cfg-generics/commit/e2f04a9f4a51eb058446d7a8ab6835df53989099"},"commit from the osism/cfg-generics repository"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"---\nfeatures:\n  - |\n    The `requirements.yml` has been removed. The version will be set in the `run.sh`\n    script for the seed process in the future exactly as later in the update process\n    via the parameters `ANSIBLE_COLLECTION_SERVICES_VERSION` and\n    `ANSIBLE_PLAYBOOKS_MANAGER_VERSION`.\nupgrade:\n  - |\n    In existing configuration repositories, the `environments/manager/requirements.yml`\n    file can be removed after the generics have been synced.\n")),(0,o.kt)("h3",{id:"repositories-without-release-notes"},"Repositories without release notes"),(0,o.kt)("p",null,"We do not create release notes in the following repositories:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"osism/github-manager"),(0,o.kt)("li",{parentName:"ul"},"osism/osism.github.io"),(0,o.kt)("li",{parentName:"ul"},"osism/release")))}p.isMDXComponent=!0}}]);